name: Build & deploy

env:
  NODE_VERSION: '18'
  TARGET: x86_64-unknown-linux-musl
  BUILD_PATH: target/x86_64-unknown-linux-musl/release


on:
  push:
    branches:
      - main

jobs:
  server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Add linux-musl target
        run: |
          rustup target add ${{ env.TARGET }}
          sudo apt install musl-tools pkg-config libssl-dev
          cargo clean
          OPENSSL_LIB_DIR="/usr/lib/x86_64-linux-gnu"
          OPENSSL_INCLUDE_DIR="/usr/include/openssl"
      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-cache
      - name: Release lambda
        run: |
          pip install cargo-lambda
          cargo lambda build --release
      - run: npm install
      - name: Serverless deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "cd ./server && serverless deploy"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  checkS3:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Create step-function-graph-visualizer folder
        run: aws s3 mb s3://step-function-graph-visualizer

  deploy:
    if: always()
    runs-on: ubuntu-latest
    needs: checkS3
    steps:
      - uses: actions/checkout@v3
      - name: Cache .npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Use Node.js ${{env.NODE_VERSION}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: cd ui && npm install
      - name: Build
        run: cd ui && npm run build
      - name: Deploy
        run: cd ui && aws s3 sync ./build s3://step-function-graph-visualizer

